1 单一职责：一个类一个功能
2 迪米特：类之间减少依赖
3 接口隔离：接口也要简单单一 不要一个大而全的接口(可根据业务或者其他区分)
4 里氏替换：可以扩展父类 不要覆盖父类
    如果覆盖了 别人在调用的时候可能出错
    避免重复代码(继承父类)  避免写bug(不覆盖父类方法)
5 依赖倒置：面向接口编程
6 开闭


工厂模式：
    结偶：屏蔽创建逻辑
    统一管理控制：

策略模式：case when ...

单例模式：
    静态内部类(中的静态常量)：JVM怎么解决线程安全 用常量的时候会加载类 在加载类的时候init方法会自动实现枷锁和同步
        在并发场景下用这种单例阻塞的时间比较长
        #静态内部类只有成员在用的时候才会加载



